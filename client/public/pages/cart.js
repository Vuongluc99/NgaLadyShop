/**
 * Gi·ªè h√†ng - X·ª≠ l√Ω ch·ª©c nƒÉng gi·ªè h√†ng
 * 
 * File n√†y ch·ª©a t·∫•t c·∫£ c√°c ch·ª©c nƒÉng li√™n quan ƒë·∫øn gi·ªè h√†ng:
 * - Th√™m/x√≥a s·∫£n ph·∫©m
 * - C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
 * - T√≠nh t·ªïng ti·ªÅn, thu·∫ø, ph√≠ v·∫≠n chuy·ªÉn
 * - L∆∞u gi·ªè h√†ng v√†o localStorage
 * - Ch·ª©c nƒÉng "L∆∞u l·∫°i sau"
 */

document.addEventListener("DOMContentLoaded", function () {
    // L·∫•y c√°c ph·∫ßn t·ª≠ DOM
    const cartItemsContainer = document.getElementById("cart-items");
    const clearCartButton = document.getElementById("clear-cart");

    // Kh·ªüi t·∫°o gi·ªè h√†ng t·ª´ localStorage
    let cart = [];
    try {
        cart = JSON.parse(localStorage.getItem("cart")) || [];
    } catch (error) {
        console.error("Error parsing cart data from localStorage:", error);
        cart = [];
        localStorage.removeItem("cart");
    }

    /**
     * L∆∞u gi·ªè h√†ng v√†o localStorage v√† c·∫≠p nh·∫≠t giao di·ªán
     */
    function saveCartAndRefresh() {
        localStorage.setItem("cart", JSON.stringify(cart));
        updateCartDisplay();
    }

    /**
     * C·∫≠p nh·∫≠t hi·ªÉn th·ªã gi·ªè h√†ng
     * @param {HTMLElement} targetElement - Ph·∫ßn t·ª≠ ch·ª©a c√°c m·ª•c gi·ªè h√†ng
     */
    function updateCartDisplay(targetElement = cartItemsContainer) {
        targetElement.innerHTML = "";

        let totalPrice = 0;
        let totalQuantity = 0;
        cart.forEach((item, index) => {
            // T·∫°o ph·∫ßn t·ª≠ cho m·ªói s·∫£n ph·∫©m
            const itemElement = document.createElement("div");
            itemElement.classList.add("cart-item");

            // T·∫°o h√¨nh ·∫£nh s·∫£n ph·∫©m
            const imageElement = document.createElement("img");
            imageElement.src = item.image;
            imageElement.alt = item.name;
            imageElement.classList.add("cart-item-image");

            // T·∫°o ph·∫ßn th√¥ng tin s·∫£n ph·∫©m
            const itemInfo = document.createElement("div");
            itemInfo.classList.add('cart-item-info');

            // T√™n s·∫£n ph·∫©m
            const itemName = document.createElement("h4");
            itemName.textContent = item.name;
            itemName.style.margin = "0 0 5px 0";
            itemInfo.appendChild(itemName);

            // Gi√° s·∫£n ph·∫©m
            const itemPrice = document.createElement("p");
            itemPrice.textContent = `ƒê∆°n gi√°: ${item.price}`;
            itemPrice.style.margin = "0 0 5px 0";
            itemInfo.appendChild(itemPrice);

            // S·ªë l∆∞·ª£ng s·∫£n ph·∫©m
            const itemQuantity = document.createElement("p");
            itemQuantity.textContent = `S·ªë l∆∞·ª£ng: ${item.quantity}`;
            itemQuantity.style.margin = "0 0 5px 0";
            itemInfo.appendChild(itemQuantity);

            // T√≠nh v√† hi·ªÉn th·ªã t·ªïng ti·ªÅn s·∫£n ph·∫©m
            const priceValue = parseInt(item.price.replace(/\D/g, ""));
            const itemTotalPrice = priceValue * item.quantity;
            const itemTotal = document.createElement("p");
            itemTotal.textContent = `Th√†nh ti·ªÅn: ${itemTotalPrice.toLocaleString()}ƒë`;
            itemTotal.style.fontWeight = "bold";
            itemTotal.style.color = "#e44d26";
            itemTotal.style.margin = "0";
            itemInfo.appendChild(itemTotal);

            itemElement.appendChild(imageElement);
            itemElement.appendChild(itemInfo);

            // Th√™m c√°c n√∫t ƒëi·ªÅu khi·ªÉn s·ªë l∆∞·ª£ng v√† x√≥a n·∫øu ƒëang ·ªü trang gi·ªè h√†ng
            if (targetElement === cartItemsContainer) {
                // T·∫°o container cho c√°c n√∫t
                const buttonContainer = document.createElement("div");
                buttonContainer.style.display = "flex";
                buttonContainer.style.flexDirection = "column";
                buttonContainer.style.gap = "5px";
                buttonContainer.style.marginLeft = "10px";

                // Container ƒëi·ªÅu khi·ªÉn s·ªë l∆∞·ª£ng
                const quantityControl = document.createElement("div");
                quantityControl.style.display = "flex";
                quantityControl.style.alignItems = "center";

                // N√∫t tƒÉng s·ªë l∆∞·ª£ng
                const increaseButton = document.createElement("button");
                increaseButton.textContent = "‚ûï";
                increaseButton.onclick = function () { increaseQuantity(index); };
                increaseButton.classList.add("quantity-button", "increase-button");

                // N√∫t gi·∫£m s·ªë l∆∞·ª£ng
                const decreaseButton = document.createElement("button");
                decreaseButton.textContent = "‚ûñ";
                decreaseButton.onclick = function () { decreaseQuantity(index); };
                decreaseButton.classList.add("quantity-button", "decrease-button");

                quantityControl.appendChild(decreaseButton);
                quantityControl.appendChild(increaseButton);
                buttonContainer.appendChild(quantityControl);

                // N√∫t x√≥a s·∫£n ph·∫©m
                const removeButton = document.createElement("button");
                removeButton.textContent = "üóë X√≥a";
                removeButton.onclick = function () { removeFromCart(index); };
                removeButton.classList.add("remove-button");
                buttonContainer.appendChild(removeButton);

                // N√∫t l∆∞u l·∫°i sau
                const saveButton = document.createElement("button");
                saveButton.textContent = "üíæ L∆∞u l·∫°i sau";
                saveButton.onclick = function () { saveForLater(index); };
                saveButton.style.backgroundColor = "#4267B2";
                saveButton.style.color = "white";
                saveButton.style.border = "none";
                saveButton.style.padding = "5px 10px";
                saveButton.style.cursor = "pointer";
                saveButton.style.borderRadius = "5px";
                buttonContainer.appendChild(saveButton);

                itemElement.appendChild(buttonContainer);
            }

            targetElement.appendChild(itemElement);

            // T√≠nh t·ªïng cho t√≥m t·∫Øt ƒë∆°n h√†ng
            const itemPriceValue = parseInt(item.price.replace(/\D/g, ""));
            const itemTotalValue = itemPriceValue * item.quantity;
            totalPrice += itemTotalValue;
            totalQuantity += item.quantity;
        });

        /**
         * C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m tr√™n icon gi·ªè h√†ng
         */
        function updateCartTotalTotal() {
            const cartCountElements = document.querySelectorAll("#cart-count");
            cartCountElements.forEach(cartCountElement => {
                cartCountElement.textContent = totalQuantity;
            });
        }
        updateCartTotalTotal();

        // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu gi·ªè h√†ng tr·ªëng
        if (cart.length === 0) {
            const emptyCartMessage = document.createElement("div");
            emptyCartMessage.style.textAlign = "center";
            emptyCartMessage.style.padding = "20px";
            emptyCartMessage.style.color = "#666";
            emptyCartMessage.innerHTML = `
                <i class="fas fa-shopping-cart" style="font-size: 48px; color: #ddd; margin-bottom: 10px;"></i>
                <p>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</p>
                <a href="index.html" style="color: #ff5733; text-decoration: none;">Ti·∫øp t·ª•c mua s·∫Øm</a>
            `;
            targetElement.appendChild(emptyCartMessage);
        }

        // T·∫°o ho·∫∑c c·∫≠p nh·∫≠t t√≥m t·∫Øt ƒë∆°n h√†ng
        let orderSummary = document.getElementById("order-summary");
        if (!orderSummary && cart.length > 0) {
            orderSummary = document.createElement("div");
            orderSummary.id = "order-summary";
            orderSummary.style.marginTop = "20px";
            orderSummary.style.padding = "15px";
            orderSummary.style.backgroundColor = "#f9f9f9";
            orderSummary.style.borderRadius = "5px";
            orderSummary.style.boxShadow = "0 2px 4px rgba(0,0,0,0.1)";
            cartItemsContainer.parentNode.insertBefore(orderSummary, cartItemsContainer.nextSibling);
        } else if (orderSummary) {
            orderSummary.innerHTML = "";
            if (cart.length === 0) {
                orderSummary.style.display = "none";
            } else {
                orderSummary.style.display = "block";
            }
        }

        // T·∫°o n·ªôi dung t√≥m t·∫Øt ƒë∆°n h√†ng n·∫øu c√≥ s·∫£n ph·∫©m
        if (cart.length > 0 && orderSummary) {
            // Ti√™u ƒë·ªÅ h√≥a ƒë∆°n
            const summaryTitle = document.createElement("h3");
            summaryTitle.textContent = "H√≥a ƒë∆°n mua h√†ng";
            summaryTitle.style.marginTop = "0";
            orderSummary.appendChild(summaryTitle);

            // T·∫°m t√≠nh
            const subtotal = document.createElement("p");
            subtotal.innerHTML = `T·∫°m t√≠nh: <span style="float: right;">${totalPrice.toLocaleString()}ƒë</span>`;
            orderSummary.appendChild(subtotal);

            // T√≠nh thu·∫ø (10%)
            const taxAmount = Math.round(totalPrice * 0.1);
            const tax = document.createElement("p");
            tax.innerHTML = `Thu·∫ø (10%): <span style="float: right;">${taxAmount.toLocaleString()}ƒë</span>`;
            orderSummary.appendChild(tax);

            // T√≠nh ph√≠ v·∫≠n chuy·ªÉn (mi·ªÖn ph√≠ cho ƒë∆°n h√†ng tr√™n 500,000ƒë)
            let shippingCost = 30000; // Ph√≠ v·∫≠n chuy·ªÉn m·∫∑c ƒë·ªãnh
            if (totalPrice >= 500000) {
                shippingCost = 0;
            }

            // Hi·ªÉn th·ªã ph√≠ v·∫≠n chuy·ªÉn
            const shipping = document.createElement("p");
            shipping.innerHTML = `Ph√≠ v·∫≠n chuy·ªÉn: <span style="float: right;">${shippingCost > 0 ? shippingCost.toLocaleString() + 'ƒë' : 'Mi·ªÖn ph√≠'}</span>`;
            orderSummary.appendChild(shipping);

            // Hi·ªÉn th·ªã ghi ch√∫ v·ªÅ mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn
            if (totalPrice < 500000) {
                const freeShippingNote = document.createElement("p");
                freeShippingNote.style.fontSize = "12px";
                freeShippingNote.style.color = "#666";
                freeShippingNote.textContent = `Mua th√™m ${(500000 - totalPrice).toLocaleString()}ƒë ƒë·ªÉ ƒë∆∞·ª£c mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn`;
                orderSummary.appendChild(freeShippingNote);
            }

            // Th√™m ƒë∆∞·ªùng ph√¢n c√°ch
            const divider = document.createElement("hr");
            divider.style.margin = "10px 0";
            divider.style.border = "none";
            divider.style.borderTop = "1px solid #ddd";
            orderSummary.appendChild(divider);

            // T√≠nh t·ªïng cu·ªëi c√πng
            const finalTotal = totalPrice + taxAmount + shippingCost;
            const total = document.createElement("p");
            total.style.fontWeight = "bold";
            total.style.fontSize = "18px";
            total.innerHTML = `T·ªïng ti·ªÅn: <span style="float: right; color: #e44d26;">${finalTotal.toLocaleString()}ƒë</span>`;
            orderSummary.appendChild(total);
        }

        // C·∫≠p nh·∫≠t hi·ªÉn th·ªã n√∫t x√≥a gi·ªè h√†ng
        if (clearCartButton) {
            clearCartButton.style.display = cart.length > 0 ? "inline-block" : "none";
        }

        // C·∫≠p nh·∫≠t hi·ªÉn th·ªã n√∫t thanh to√°n
        const checkoutButton = document.getElementById("checkout-button");
        if (checkoutButton) {
            checkoutButton.style.display = cart.length > 0 ? "inline-block" : "none";
        }
    }

    // Ch·ª©c nƒÉng "L∆∞u l·∫°i sau"
    let savedItems = [];
    try {
        savedItems = JSON.parse(localStorage.getItem("savedItems")) || [];
    } catch (error) {
        console.error("Error parsing saved items from localStorage:", error);
        savedItems = [];
        localStorage.removeItem("savedItems");
    }

    /**
     * Chuy·ªÉn s·∫£n ph·∫©m t·ª´ gi·ªè h√†ng sang danh s√°ch l∆∞u
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.saveForLater = function (index) {
        // Chuy·ªÉn s·∫£n ph·∫©m t·ª´ gi·ªè h√†ng sang danh s√°ch ƒë√£ l∆∞u
        const item = cart.splice(index, 1)[0];
        savedItems.push(item);
        localStorage.setItem("savedItems", JSON.stringify(savedItems));
        saveCartAndRefresh();
        updateSavedItemsDisplay();
    };

    /**
     * C·∫≠p nh·∫≠t hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m ƒë√£ l∆∞u
     */
    function updateSavedItemsDisplay() {
        // T·∫°o ho·∫∑c l·∫•y container cho s·∫£n ph·∫©m ƒë√£ l∆∞u
        let savedItemsSection = document.getElementById("saved-items-section");
        if (!savedItemsSection && savedItems.length > 0) {
            savedItemsSection = document.createElement("section");
            savedItemsSection.id = "saved-items-section";
            savedItemsSection.classList.add("cart-container");
            savedItemsSection.style.marginTop = "30px";

            const savedItemsTitle = document.createElement("h2");
            savedItemsTitle.textContent = "S·∫£n ph·∫©m ƒë√£ l∆∞u";
            savedItemsSection.appendChild(savedItemsTitle);

            const savedItemsContainer = document.createElement("div");
            savedItemsContainer.id = "saved-items";
            savedItemsSection.appendChild(savedItemsContainer);

            document.querySelector(".cart-container").parentNode.appendChild(savedItemsSection);
        } else if (savedItemsSection) {
            const savedItemsContainer = document.getElementById("saved-items");
            savedItemsContainer.innerHTML = "";

            if (savedItems.length === 0) {
                savedItemsSection.style.display = "none";
            } else {
                savedItemsSection.style.display = "block";

                // Hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m ƒë√£ l∆∞u
                savedItems.forEach((item, index) => {
                    const itemElement = document.createElement("div");
                    itemElement.classList.add("cart-item");

                    const imageElement = document.createElement("img");
                    imageElement.src = item.image;
                    imageElement.alt = item.name;
                    imageElement.classList.add("cart-item-image");

                    const itemInfo = document.createElement("div");
                    itemInfo.classList.add('cart-item-info');

                    const itemName = document.createElement("h4");
                    itemName.textContent = item.name;
                    itemInfo.appendChild(itemName);

                    const itemPrice = document.createElement("p");
                    itemPrice.textContent = `Gi√°: ${item.price}`;
                    itemInfo.appendChild(itemPrice);

                    itemElement.appendChild(imageElement);
                    itemElement.appendChild(itemInfo);

                    // N√∫t th√™m v√†o gi·ªè h√†ng
                    const addToCartButton = document.createElement("button");
                    addToCartButton.textContent = "üõí Th√™m v√†o gi·ªè h√†ng";
                    addToCartButton.style.backgroundColor = "#4CAF50";
                    addToCartButton.style.color = "white";
                    addToCartButton.style.border = "none";
                    addToCartButton.style.padding = "5px 10px";
                    addToCartButton.style.cursor = "pointer";
                    addToCartButton.style.borderRadius = "5px";
                    addToCartButton.onclick = function () { moveToCart(index); };

                    // N√∫t x√≥a
                    const removeButton = document.createElement("button");
                    removeButton.textContent = "üóë X√≥a";
                    removeButton.classList.add("remove-button");
                    removeButton.style.marginLeft = "10px";
                    removeButton.onclick = function () { removeSavedItem(index); };

                    const buttonContainer = document.createElement("div");
                    buttonContainer.appendChild(addToCartButton);
                    buttonContainer.appendChild(removeButton);
                    itemElement.appendChild(buttonContainer);

                    savedItemsContainer.appendChild(itemElement);
                });
            }
        }
    }

    /**
     * Chuy·ªÉn s·∫£n ph·∫©m t·ª´ danh s√°ch l∆∞u sang gi·ªè h√†ng
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong danh s√°ch l∆∞u
     */
    window.moveToCart = function (index) {
        // Chuy·ªÉn s·∫£n ph·∫©m t·ª´ danh s√°ch ƒë√£ l∆∞u sang gi·ªè h√†ng
        const item = savedItems.splice(index, 1)[0];

        // Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i trong gi·ªè h√†ng ch∆∞a
        const existingItemIndex = cart.findIndex(cartItem => cartItem.name === item.name);
        if (existingItemIndex !== -1) {
            cart[existingItemIndex].quantity += item.quantity;
        } else {
            cart.push(item);
        }

        localStorage.setItem("savedItems", JSON.stringify(savedItems));
        saveCartAndRefresh();
        updateSavedItemsDisplay();
    };

    /**
     * X√≥a s·∫£n ph·∫©m kh·ªèi danh s√°ch l∆∞u
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong danh s√°ch l∆∞u
     */
    window.removeSavedItem = function (index) {
        savedItems.splice(index, 1);
        localStorage.setItem("savedItems", JSON.stringify(savedItems));
        updateSavedItemsDisplay();
    };

    /**
     * TƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.increaseQuantity = function (index) {
        cart[index].quantity++;
        saveCartAndRefresh();
    };

    /**
     * Gi·∫£m s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.decreaseQuantity = function (index) {
        if (cart[index].quantity > 1) {
            cart[index].quantity--;
        } else {
            cart.splice(index, 1);
        }
        saveCartAndRefresh();
    };

    /**
     * X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
     * @param {number} index - V·ªã tr√≠ s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.removeFromCart = function (index) {
        cart.splice(index, 1);
        saveCartAndRefresh();
    };

    // X·ª≠ l√Ω n√∫t x√≥a gi·ªè h√†ng
    if (clearCartButton) {
        clearCartButton.addEventListener("click", function () {
            cart = [];
            saveCartAndRefresh();
        });
    }

    // Kh·ªüi t·∫°o hi·ªÉn th·ªã gi·ªè h√†ng
    updateCartDisplay();

    /**
     * L·∫•y danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng
     * @returns {Array} M·∫£ng c√°c s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.getCartItems = function () {
        return cart;
    }

    /**
     * C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m hi·ªÉn th·ªã tr√™n icon gi·ªè h√†ng
     * @param {number} count - S·ªë l∆∞·ª£ng s·∫£n ph·∫©m
     */
    window.updateCartCount = function (count) {
        const cartCountElements = document.querySelectorAll("#cart-count");
        cartCountElements.forEach(item => {
            item.textContent = count;
        });
    }

    /**
     * C·∫≠p nh·∫≠t t·ªïng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
     */
    window.updateTotal = function () {
        let totalPrice = 0;
        let totalQuantity = 0;
        cart.forEach((item, index) => {
            const itemPrice = parseInt(item.price.replace(/\D/g, ""));
            const itemTotal = itemPrice * item.quantity;
            totalPrice += itemTotal;
            totalQuantity += item.quantity;
        });
        const cartCountElements = document.querySelectorAll("#cart-count");
        cartCountElements.forEach(cartCountElement => {
            cartCountElement.textContent = totalQuantity;
        });
    }
    window.updateTotal();
});