{"version":3,"file":"static/js/main.172f5219.js","mappings":"MAUA,IAAIA,EAAY,EAChB,MAAMC,EAAUC,SAASC,iBAAiB,gBACjBD,SAASE,eAAe,cACjD,IAAIC,EAAO,GA8GX,SAASC,IACL,IAAIC,EAAgB,EAIpB,OAHAF,EAAKG,SAAQC,IACTF,GAAiBE,EAAKC,QAAQ,IAE3BH,CACX,CAMA,SAASI,EAAgBC,GACrBZ,EAAYY,EACgBV,SAASC,iBAAiB,eAClCK,SAAQC,IACxBA,EAAKI,YAAcb,CAAS,IAEhCc,aAAaC,QAAQ,YAAaf,EACtC,CA5HAE,SAASc,iBAAiB,oBAAoB,WAE1C,MAAMC,EAAcf,SAASgB,cAAc,wCACrCC,EAAejB,SAASgB,cAAc,4BACtCE,EAAclB,SAASgB,cAAc,iBACrCG,EAAenB,SAASC,iBAAiB,iBAsB/C,SAASmB,IACL,MAAMC,EAAaN,EAAYO,MAAMC,cAAcC,OAGnD,GAAmB,KAAfH,EAEA,YADAI,IAIJ,IAAIC,GAAa,EAgBjB,GAbAP,EAAab,SAAQqB,IACGA,EAAKX,cAAc,oBAAoBL,YAAYY,cAGvDK,SAASP,IACrBM,EAAKE,MAAMC,QAAU,QACrBJ,GAAa,GAEbC,EAAKE,MAAMC,QAAU,MACzB,IAICJ,EAkBE,CAEH,MAAMK,EAAe/B,SAASE,eAAe,qBACzC6B,IACAA,EAAaF,MAAMC,QAAU,OAErC,KAxBiB,CAEb,IAAIC,EAAe/B,SAASE,eAAe,qBACtC6B,IACDA,EAAe/B,SAASgC,cAAc,OACtCD,EAAaE,GAAK,oBAClBF,EAAaF,MAAMK,UAAY,SAC/BH,EAAaF,MAAMM,QAAU,OAC7BJ,EAAaF,MAAMO,OAAS,YAC5BL,EAAaF,MAAMQ,gBAAkB,UACrCN,EAAaF,MAAMS,aAAe,OAClCP,EAAaF,MAAMU,SAAW,QAC9BrB,EAAYsB,WAAWC,aAAaV,EAAcb,EAAYwB,cAIlEX,EAAapB,YAAc,iFAA4CU,KACvEU,EAAaF,MAAMC,QAAU,OACjC,CAOJ,CAKA,SAASL,IACLN,EAAab,SAAQqB,IACjBA,EAAKE,MAAMC,QAAU,OAAO,IAIhC,MAAMC,EAAe/B,SAASE,eAAe,qBACzC6B,IACAA,EAAaF,MAAMC,QAAU,OAErC,CApFAb,EAAaH,iBAAiB,SAAS,WACnCM,GACJ,IAGAL,EAAYD,iBAAiB,SAAS,SAAS6B,GACzB,UAAdA,EAAMC,KACNxB,IAIsB,KAAtBL,EAAYO,OACZG,GAER,GAuEJ,IAGIb,aAAaiC,QAAQ,UACrB1C,EAAO2C,KAAKC,MAAMnC,aAAaiC,QAAQ,SACvCpC,EAAgBL,MA6BpBL,EAAQO,SAAQ0C,IACZA,EAAOlC,iBAAiB,SAAU6B,IAE9B,MAAMM,EAAUN,EAAMO,OAAOC,cACvBC,EAAcH,EAAQjC,cAAc,MAAML,YAC1C0C,EAAeJ,EAAQjC,cAAc,KAAKL,YAC1C2C,EAAeL,EAAQE,cAAcnC,cAAc,OAAOuC,IAGhE,IAAIC,EAAerD,EAAKsD,MAAKlD,GAAQA,EAAKmD,OAASN,IAE/CI,EAEAA,EAAahD,WAGbL,EAAKwD,KAAK,CACND,KAAMN,EACNQ,MAAOP,EACP7C,SAAU,EACVqD,MAAOP,IAKf1C,aAAaC,QAAQ,OAAQiC,KAAKgB,UAAU3D,IAC5CM,EAAgBL,IAAyB,GAC3C,G","sources":["index.js"],"sourcesContent":["/**\n * Trang chính - Xử lý chức năng cho trang chủ\n * \n * File này xử lý các chức năng:\n * - Tìm kiếm sản phẩm\n * - Thêm sản phẩm vào giỏ hàng\n * - Cập nhật số lượng sản phẩm trong giỏ hàng\n */\n\n// Khởi tạo biến toàn cục\nlet cartCount = 0;\nconst buttons = document.querySelectorAll(\".add-to-cart\");\nconst cartCountElement = document.getElementById(\"cart-count\");\nlet cart = [];\n\n/**\n * Chức năng tìm kiếm sản phẩm\n */\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Lấy các phần tử DOM cho tìm kiếm\n    const searchInput = document.querySelector(\".search-container input[type='text']\");\n    const searchButton = document.querySelector(\".search-container button\");\n    const productGrid = document.querySelector(\".product-grid\");\n    const productCards = document.querySelectorAll(\".product-card\");\n    \n    // Thêm listener cho nút tìm kiếm\n    searchButton.addEventListener(\"click\", function() {\n        performSearch();\n    });\n    \n    // Thêm listener cho phím Enter trong ô tìm kiếm\n    searchInput.addEventListener(\"keyup\", function(event) {\n        if (event.key === \"Enter\") {\n            performSearch();\n        }\n        \n        // Nếu ô tìm kiếm trống, hiển thị tất cả sản phẩm\n        if (searchInput.value === \"\") {\n            resetSearch();\n        }\n    });\n    \n    /**\n     * Thực hiện tìm kiếm sản phẩm\n     */\n    function performSearch() {\n        const searchTerm = searchInput.value.toLowerCase().trim();\n        \n        // Nếu từ khóa tìm kiếm trống, hiển thị tất cả sản phẩm\n        if (searchTerm === \"\") {\n            resetSearch();\n            return;\n        }\n        \n        let matchFound = false;\n        \n        // Duyệt qua tất cả sản phẩm\n        productCards.forEach(card => {\n            const productName = card.querySelector(\".product-info h3\").textContent.toLowerCase();\n            \n            // Kiểm tra nếu tên sản phẩm chứa từ khóa tìm kiếm\n            if (productName.includes(searchTerm)) {\n                card.style.display = \"block\";\n                matchFound = true;\n            } else {\n                card.style.display = \"none\";\n            }\n        });\n        \n        // Kiểm tra nếu có sản phẩm phù hợp\n        if (!matchFound) {\n            // Nếu không có container thông báo, tạo mới\n            let noResultsMsg = document.getElementById(\"no-search-results\");\n            if (!noResultsMsg) {\n                noResultsMsg = document.createElement(\"div\");\n                noResultsMsg.id = \"no-search-results\";\n                noResultsMsg.style.textAlign = \"center\";\n                noResultsMsg.style.padding = \"20px\";\n                noResultsMsg.style.margin = \"20px auto\";\n                noResultsMsg.style.backgroundColor = \"#f8f8f8\";\n                noResultsMsg.style.borderRadius = \"10px\";\n                noResultsMsg.style.maxWidth = \"600px\";\n                productGrid.parentNode.insertBefore(noResultsMsg, productGrid.nextSibling);\n            }\n            \n            // Hiển thị thông báo không tìm thấy\n            noResultsMsg.textContent = `Không tìm thấy sản phẩm nào phù hợp với \"${searchTerm}\"`;\n            noResultsMsg.style.display = \"block\";\n        } else {\n            // Ẩn thông báo không tìm thấy nếu có\n            const noResultsMsg = document.getElementById(\"no-search-results\");\n            if (noResultsMsg) {\n                noResultsMsg.style.display = \"none\";\n            }\n        }\n    }\n    \n    /**\n     * Đặt lại tìm kiếm và hiển thị tất cả sản phẩm\n     */\n    function resetSearch() {\n        productCards.forEach(card => {\n            card.style.display = \"block\";\n        });\n        \n        // Ẩn thông báo không tìm thấy nếu có\n        const noResultsMsg = document.getElementById(\"no-search-results\");\n        if (noResultsMsg) {\n            noResultsMsg.style.display = \"none\";\n        }\n    }\n});\n\n// Tải giỏ hàng từ localStorage nếu có\nif (localStorage.getItem(\"cart\")) {\n    cart = JSON.parse(localStorage.getItem(\"cart\"));\n    updateCartCount(calculateTotalQuantity());\n}\n\n/**\n * Tính tổng số lượng sản phẩm trong giỏ hàng\n * @returns {number} Tổng số lượng sản phẩm\n */\nfunction calculateTotalQuantity() {\n    let totalQuantity = 0;\n    cart.forEach(item => {\n        totalQuantity += item.quantity;\n    });\n    return totalQuantity;\n}\n\n/**\n * Cập nhật số lượng hiển thị trên icon giỏ hàng\n * @param {number} count - Số lượng sản phẩm\n */\nfunction updateCartCount(count) {\n    cartCount = count;\n    const allCartCountElement = document.querySelectorAll(\"#cart-count\");\n    allCartCountElement.forEach(item => {\n        item.textContent = cartCount;\n    });\n    localStorage.setItem(\"cartCount\", cartCount);\n}\n\n// Thêm listener cho các nút \"Thêm vào giỏ hàng\"\nbuttons.forEach(button => {\n    button.addEventListener(\"click\", (event) => {\n        // Lấy thông tin sản phẩm\n        const product = event.target.parentElement;\n        const productName = product.querySelector(\"h3\").textContent;\n        const productPrice = product.querySelector(\"p\").textContent;\n        const productImage = product.parentElement.querySelector(\"img\").src;\n\n        // Kiểm tra nếu sản phẩm đã có trong giỏ hàng\n        let existingItem = cart.find(item => item.name === productName);\n\n        if (existingItem) {\n            // Nếu đã có, tăng số lượng\n            existingItem.quantity++;\n        } else {\n            // Nếu chưa có, thêm sản phẩm mới\n            cart.push({\n                name: productName,\n                price: productPrice,\n                quantity: 1,\n                image: productImage\n            });\n        }\n\n        // Lưu giỏ hàng và cập nhật số lượng hiển thị\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n        updateCartCount(calculateTotalQuantity());\n    });\n});"],"names":["cartCount","buttons","document","querySelectorAll","getElementById","cart","calculateTotalQuantity","totalQuantity","forEach","item","quantity","updateCartCount","count","textContent","localStorage","setItem","addEventListener","searchInput","querySelector","searchButton","productGrid","productCards","performSearch","searchTerm","value","toLowerCase","trim","resetSearch","matchFound","card","includes","style","display","noResultsMsg","createElement","id","textAlign","padding","margin","backgroundColor","borderRadius","maxWidth","parentNode","insertBefore","nextSibling","event","key","getItem","JSON","parse","button","product","target","parentElement","productName","productPrice","productImage","src","existingItem","find","name","push","price","image","stringify"],"sourceRoot":""}